@model Sistema_de_contabilidad_Open_Source.Models.ViewModels.asientoContableViewModel




@{
    ViewBag.Title = "Editar asiento contable";

}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Editar", "asientoContable", FormMethod.Post))
{<div class="row">
        <div class="col-md-12">
            <div>
                @Html.LabelFor(d => d.descripcion)
                @Html.TextBoxFor(d => d.descripcion, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(d => d.descripcion, null, new { @style = "color:red" })

                <br />
            </div>
            <!---->
            <div>
                @Html.LabelFor(d => d.identificadorAuxiliar)
                @Html.DropDownListFor(d => d.identificadorAuxiliar, new SelectList(Model.lstCuentasAuxiliares, "cuentasAuxiliaresID", "descripcion"), "Seleccione la cuenta auxiliar", new { @class = "form-control" })
                @Html.ValidationMessageFor(d => d.identificadorAuxiliar, null, new { @style = "color:red" })

            </div>
            <br />
            <!---->
            <div>
                @Html.LabelFor(d => d.cuenta)
                @Html.DropDownListFor(d => d.cuenta, new SelectList(Model.lstCuentasContables, "cuentasContablesID", "Descripcion"), "Seleccione la cuenta ", new { @class = "form-control" })
                @Html.ValidationMessageFor(d => d.cuenta, null, new { @style = "color:red" })

            </div>
            <br />
            <!---->
            <div>
                @Html.LabelFor(d => d.tipoMovimiento)
                @* Crear el dropdown con Debito o Credito *@
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "Debito",
                        Value = "DB"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Credito",
                        Value = "CR",

                    });
                }
                @* Fin del dropdown *@

                @Html.DropDownListFor(d => d.tipoMovimiento, listItems, "Seleccione el origen", new { @class = "form-control" })
                @Html.ValidationMessageFor(d => d.tipoMovimiento, null, new { @style = "color:red" })

            </div>
            <br />
           
            
            <!---->
            <div>
                @Html.LabelFor(d => d.monto)
                @Html.TextBoxFor(d => d.monto, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(d => d.monto, null, new { @style = "color:red" })
            </div>
            <!---->
            <div>
                @Html.LabelFor(d => d.tipoMoneda)
                @Html.DropDownListFor(d => d.tipoMoneda, new SelectList(Model.lstTipoMoneda, "tipoMonedasID", "Descripcion"), "Seleccione el tipo de moneda", new { @class = "form-control" })
                @Html.ValidationMessageFor(d => d.tipoMoneda, null, new { @style = "color:red" })

            </div>
            <br />
            <!---->
            <div>
                @Html.LabelFor(d => d.estado)
                @Html.CheckBoxFor(d => d.estado)
                @Html.ValidationMessageFor(d => d.estado, null, new { @style = "color:red" })
                <br />
            </div>
            <!---->
            <div style="text-align:right;">
                <input type="submit" class="btn btn-success" value="Guardar" />
            </div>
        </div>
    </div>
}
